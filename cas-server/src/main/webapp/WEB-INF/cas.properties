	#/** 
# * @see ------------------------------------------------------------------------------------------------------------------------ 
# * @see 先介绍一下CAS-4.0.3服务端的来自cas.properties中的一些其它配置项 
# * @see 1.cas.securityContext.status.allowedSubnet=127.0.0.1 
# * @see   可以访问的服务端统计页面：http://sso.jadyer.com:8080/cas-server-web/status 
# * @see   可以访问的服务端统计页面：http://sso.jadyer.com:8080/cas-server-web/statistics 
# * @see 2.host.name=S3 
# * @see   uniqueIdGenerators.xml中的各种UniqueTicketIdGenerator生成TGT/ST等ticket时会用到host.name作为ticket的后缀 
# * @see   host.name通常用在集群环境下,其值对于每个节点来说都必须是唯一的,这样整个集群环境生成的各种ticket也必定是唯一的 
# * @see   单机环境下就没必要修改它了 
# * @see 3.cas.logout.followServiceRedirects=true 
# * @see   是否允许客户端Logout后重定向到service参数指定的资源 
# * @see 4.tgt.maxTimeToLiveInSeconds=28800 
# * @see   指定Session的最大有效时间,即从生成到指定时间后就将超时,默认28800s,即8小时 
# * @see 5.tgt.timeToKillInSeconds=7200 
# * @see   指定用户操作的超时时间,即用户在多久不操作后就超时,默认7200s,即2小时 
# * @see   经本人亲测：在测试tgt.timeToKillInSeconds时还要注意客户端web.xml配置的超时时间 
# * @see   即只有客户端配置超时时间不大于tgt.timeToKillInSeconds时才能看见服务端设置的效果 
# * @see 6.st.timeToKillInSeconds=10 
# * @see   指定service ticket的有效时间,默认10s 
# * @see   这也是debug追踪CAS应用认证过程中经常会失败的原因,因为追踪的时候service ticket已经过了10秒有效期了 
# * @see 7.slo.callbacks.disabled=false 
# * @see   是否禁用单点登出 
# * @see ------------------------------------------------------------------------------------------------------------------------ 
# * @create 2015-7-28 下午7:49:24 
# * @author 玄玉<http://blog.csdn.net/jadyer> 
# */  

#<<数据库元信息>>  
jdbc.url=jdbc:mysql://localhost:3306/shiro?useUnicode=true&amp;characterEncoding=UTF-8  
jdbc.username=scott
jdbc.password=tiger

#CAS配置RememberMe期限 604800 = 60*60*24*7 = 7天
rememberMeDuration=604800

server.name=http://localhost:8080
server.prefix=${server.name}/cas
# IP address or CIDR subnet allowed to access the /status URI of CAS that exposes health check information
cas.securityContext.status.allowedSubnet=127.0.0.1


cas.themeResolver.defaultThemeName=cas-theme-default
cas.viewResolver.basename=default_views

##
# Unique CAS node name
# host.name is used to generate unique Service Ticket IDs and SAMLArtifacts.  This is usually set to the specific
# hostname of the machine running the CAS node, but it could be any label so long as it is unique in the cluster.
host.name=cas01.example.org

##
# Database flavors for Hibernate
#
# One of these is needed if you are storing Services or Tickets in an RDBMS via JPA.
#
# database.hibernate.dialect=org.hibernate.dialect.OracleDialect
# database.hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
# database.hibernate.dialect=org.hibernate.dialect.HSQLDialect

##
# CAS Logout Behavior
# WEB-INF/cas-servlet.xml
#
# Specify whether CAS should redirect to the specified service parameter on /logout requests
cas.logout.followServiceRedirects=true

##
# Single Sign-On Session Timeouts
# Defaults sourced from WEB-INF/spring-configuration/ticketExpirationPolices.xml
#
# Maximum session timeout - TGT will expire in maxTimeToLiveInSeconds regardless of usage
# tgt.maxTimeToLiveInSeconds=28800
#
# Idle session timeout -  TGT will expire sooner than maxTimeToLiveInSeconds if no further requests
# for STs occur within timeToKillInSeconds
# tgt.timeToKillInSeconds=7200

##
# Service Ticket Timeout
# Default sourced from WEB-INF/spring-configuration/ticketExpirationPolices.xml
#
# Service Ticket timeout - typically kept short as a control against replay attacks, default is 10s.  You'll want to
# increase this timeout if you are manually testing service ticket creation/validation via tamperdata or similar tools
# st.timeToKillInSeconds=10

##
# Single Logout Out Callbacks
# Default sourced from WEB-INF/spring-configuration/argumentExtractorsConfiguration.xml
#
# To turn off all back channel SLO requests set slo.disabled to true
#禁止单点登出标识， 默认为false:即可以单点登出
slo.callbacks.disabled=false

##
# Service Registry Periodic Reloading Scheduler
# Default sourced from WEB-INF/spring-configuration/applicationContext.xml
#
# Force a startup delay of 2 minutes.
# service.registry.quartz.reloader.startDelay=120000
# 
# Reload services every 2 minutes
# service.registry.quartz.reloader.repeatInterval=120000

##
# Log4j
# Default sourced from WEB-INF/spring-configuration/log4jConfiguration.xml:
#
# It is often time helpful to externalize log4j.xml to a system path to preserve settings between upgrades.
# e.g. log4j.config.location=/etc/cas/log4j.xml
# log4j.config.location=classpath:log4j.xml
#
# log4j refresh interval in millis
# log4j.refresh.interval=60000

##
# Encoding
#
# Set the encoding to use for requests. Default is UTF-8
# httprequest.web.encoding=UTF-8

# Default is true. Switch this to "false" to not enforce the specified encoding in any case,
# applying it as default response encoding as well.
# httprequest.web.encoding.force=true

##
# Password Policy
#
# Warn all users of expiration date regardless of warningDays value.
password.policy.warnAll=false

# Threshold number of days to begin displaying password expiration warnings.
password.policy.warningDays=30

# URL to which the user will be redirected to change the passsword.
password.policy.url=https://password.example.edu/change
